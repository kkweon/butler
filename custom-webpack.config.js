const HtmlWebpackPlugin = require('html-webpack-plugin')
const WebpackShellPluginNext = require('webpack-shell-plugin-next');

const basePlugins = [
  new HtmlWebpackPlugin({
    filename: 'options.html',
    template: './src/options.html',
    chunks: ['options', 'polyfills', 'styles', 'vendor'], // Ensure necessary chunks are included
    // polyfills, styles, vendor chunks are typically generated by Angular
  }),
];

if (process.env.RUN_UPDATE_MANIFEST === 'true') {
  basePlugins.push(
    new WebpackShellPluginNext({
      onAfterDone: { // This hook runs after each compilation, for both single builds and watch mode rebuilds
        scripts: ['bash scripts/update-manifest.sh'],
        blocking: true, // Ensures webpack waits for the script to finish
        parallel: false
      }
    })
  );
}

module.exports = {
  entry: {
    // 'main' entry is handled by Angular CLI's default webpack config
    // We only need to define additional entry points.
    options: './src/main.options.ts',
  },
  plugins: basePlugins,
}
