const HtmlWebpackPlugin = require('html-webpack-plugin')
const WebpackShellPluginNext = require('webpack-shell-plugin-next')
const CopyWebpackPlugin = require('copy-webpack-plugin')

const basePlugins = [
  new CopyWebpackPlugin({
    patterns: [
      {
        from: 'src/manifest.json',
        to: 'manifest.json', // Output path is relative to webpack's output.path (dist/butler)
      },
    ],
  }),
  new HtmlWebpackPlugin({
    filename: 'options.html',
    template: './src/options.html',
    chunks: ['options', 'polyfills', 'styles', 'vendor'], // Ensure necessary chunks are included
    // polyfills, styles, vendor chunks are typically generated by Angular
  }),
]

if (process.env.RUN_UPDATE_MANIFEST === 'true') {
  basePlugins.push(
    new WebpackShellPluginNext({
      onDoneWatch: {
        // This hook runs after each compilation in watch mode.
        scripts: ['bash scripts/update-manifest.sh'],
        blocking: true, // Ensures webpack waits for the script to finish
        parallel: false,
      },
      // Keep onBuildExit for non-watch builds to ensure it runs at least once
      // and for production builds where watch mode isn't typical.
      onBuildExit: {
        scripts: ['bash scripts/update-manifest.sh'],
        blocking: true,
        parallel: false,
      },
    }),
  )
}

module.exports = {
  entry: {
    // 'main' entry is handled by Angular CLI's default webpack config
    // We only need to define additional entry points.
    options: './src/main.options.ts',
  },
  plugins: basePlugins,
}
